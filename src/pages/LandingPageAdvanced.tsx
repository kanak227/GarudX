import React, { useState, useEffect } from 'react';
import { Link } from 'react-router-dom';
import GarudXLogo from '../components/GarudXLogo';

// Comprehensive translation system
const translations = {
  en: {
    tagline: "Doctor in Village",
    launchApp: "Launch App",
    heroTitle: "See a Doctor Without Leaving Your Village",
    heroSubtitle: "No more losing daily wages for hospital visits",
    heroDescription: "Get expert medical care from home with GarudX",
    startFree: "Start Free Consultation",
    learnMore: "Learn More",
    watchDemo: "Watch Demo",
    available247: "24/7 Available",
    completelySafe: "Completely Safe", 
    useFree: "Use for Free",
    
    // Problem section
    problemTitle: "The Daily Struggle of Rural Healthcare",
    problemStats: [
      { number: "тВ╣500-2000", label: "Lost daily wages per hospital visit" },
      { number: "50+ km", label: "Average distance to quality healthcare" },
      { number: "6-8 hours", label: "Wasted time in travel and waiting" }
    ],
    problemDescription: "Every hospital visit means a day without income. Families choose between health and livelihood.",

    // Solution section
    solutionTitle: "Everything is Easy with GarudX",
    solutionSubtitle: "Complete healthcare from home. Save time, save money, stay healthy.",
    
    features: [
      {
        title: "Video Consultation",
        description: "Talk to qualified doctors face-to-face from your home",
        benefit: "Works even with slow internet",
        icon: "ЁЯй║"
      },
      {
        title: "Digital Prescriptions",
        description: "Get official prescriptions that pharmacies accept everywhere",
        benefit: "Valid at all medical stores",
        icon: "ЁЯТК"
      },
      {
        title: "Health Records",
        description: "All your medical history stored safely on your phone",
        benefit: "Available offline anytime",
        icon: "ЁЯУ▒"
      },
      {
        title: "Local Language Support",
        description: "Use in Punjabi, Hindi, and other Indian languages",
        benefit: "Call support also available",
        icon: "ЁЯМН"
      },
      {
        title: "Emergency Care",
        description: "24/7 emergency consultation and ambulance booking",
        benefit: "Connect instantly in emergencies",
        icon: "ЁЯЪи"
      },
      {
        title: "Family Health",
        description: "Manage health for your entire family in one app",
        benefit: "Elderly and children care included",
        icon: "ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж"
      }
    ],

    // How it works
    howItWorksTitle: "How GarudX Works - Simple in 3 Steps",
    steps: [
      {
        step: "1",
        title: "Book Consultation",
        description: "Choose your preferred time and doctor specialty"
      },
      {
        step: "2", 
        title: "Video Call with Doctor",
        description: "Discuss your health concerns face-to-face"
      },
      {
        step: "3",
        title: "Get Treatment",
        description: "Receive prescription and follow-up care plan"
      }
    ],

    // Savings section
    savingsTitle: "Monthly Savings with GarudX",
    savingsItems: [
      { item: "Travel costs saved", amount: "тВ╣1,200" },
      { item: "Daily wage loss avoided", amount: "тВ╣3,500" },
      { item: "Time saved (valued)", amount: "тВ╣2,000" },
      { item: "Family healthcare", amount: "тВ╣1,800" }
    ],
    totalSavings: "тВ╣8,500",
    vsTraditional: "vs тВ╣12,000 traditional healthcare costs",

    // CTA section
    ctaTitle: "Start Your Health Journey Today",
    ctaSubtitle: "Join thousands of families who chose GarudX for better healthcare",
    startNowFree: "Start Now - Completely Free",
    noHiddenFees: "тЬУ No hidden fees тЬУ No monthly charges тЬУ 24/7 support",
    trustIndicators: "Trusted by 50,000+ families across Punjab",

    // Footer
    footerTagline: "Healthcare that comes to you",
    allRightsReserved: "All rights reserved.",
    madeForVillages: "Made for villages, by people who care."
  },
  hi: {
    tagline: "рдЧрд╛рдВрд╡ рдореЗрдВ рдбреЙрдХреНрдЯрд░",
    launchApp: "рдРрдк рдЦреЛрд▓реЗрдВ",
    heroTitle: "рдЧрд╛рдВрд╡ рдЫреЛрдбрд╝реЗ рдмрд┐рдирд╛ рдбреЙрдХреНрдЯрд░ рд╕реЗ рдорд┐рд▓реЗрдВ",
    heroSubtitle: "рдЕрдм рджрд┐рди рднрд░ рдХреА рдордЬрджреВрд░реА рдирд╣реАрдВ рдЧрдВрд╡рд╛рдиреА рдкрдбрд╝реЗрдЧреА",
    heroDescription: "GarudX рдХреЗ рд╕рд╛рде рдШрд░ рдмреИрдареЗ рдкрд╛рдПрдВ рдмреЗрд╣рддрд░реАрди рдЗрд▓рд╛рдЬ",
    startFree: "рдлреНрд░реА рд╕рд▓рд╛рд╣ рд╢реБрд░реВ рдХрд░реЗрдВ",
    learnMore: "рдФрд░ рдЬрд╛рдиреЗрдВ",
    watchDemo: "рдбреЗрдореЛ рджреЗрдЦреЗрдВ",
    available247: "24/7 рдЙрдкрд▓рдмреНрдз",
    completelySafe: "рдкреВрд░реА рддрд░рд╣ рд╕реБрд░рдХреНрд╖рд┐рдд",
    useFree: "рдореБрдлреНрдд рдореЗрдВ рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░реЗрдВ",
    
    problemTitle: "рдЧреНрд░рд╛рдореАрдг рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛ рдХреА рджреИрдирд┐рдХ рд╕рдорд╕реНрдпрд╛",
    problemStats: [
      { number: "тВ╣500-2000", label: "рд╣рд░ рдЕрд╕реНрдкрддрд╛рд▓ рдХреЗ рдЪрдХреНрдХрд░ рдореЗрдВ рдЧрдВрд╡рд╛рдИ рдордЬрджреВрд░реА" },
      { number: "50+ рдХрд┐рдореА", label: "рдЕрдЪреНрдЫреЗ рдЗрд▓рд╛рдЬ рддрдХ рдХреА рдФрд╕рдд рджреВрд░реА" },
      { number: "6-8 рдШрдВрдЯреЗ", label: "рдпрд╛рддреНрд░рд╛ рдФрд░ рдЗрдВрддрдЬрд╛рд░ рдореЗрдВ рдмрд░реНрдмрд╛рдж рд╕рдордп" }
    ],
    problemDescription: "рд╣рд░ рдЕрд╕реНрдкрддрд╛рд▓ рдЬрд╛рдирд╛ рдорддрд▓рдм рдПрдХ рджрд┐рди рдХреА рдХрдорд╛рдИ рдХрд╛ рдЪрд▓реЗ рдЬрд╛рдирд╛ред рдкрд░рд┐рд╡рд╛рд░ рдХреЛ рд╕реЗрд╣рдд рдФрд░ рд░реЛрдЬреА-рд░реЛрдЯреА рдХреЗ рдмреАрдЪ рдЪреБрдирдирд╛ рдкрдбрд╝рддрд╛ рд╣реИред",

    solutionTitle: "GarudX рдХреЗ рд╕рд╛рде рд╕рдм рдХреБрдЫ рдЖрд╕рд╛рди",
    solutionSubtitle: "рдШрд░ рдмреИрдареЗ рдкреВрд░реА рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛ред рд╕рдордп рдмрдЪрд╛рдПрдВ, рдкреИрд╕реЗ рдмрдЪрд╛рдПрдВ, рд╕реНрд╡рд╕реНрде рд░рд╣реЗрдВред",
    
    features: [
      {
        title: "рд╡реАрдбрд┐рдпреЛ рд╕реЗ рдбреЙрдХреНрдЯрд░ рд╕реЗ рдмрд╛рдд",
        description: "рдШрд░ рдмреИрдареЗ рдпреЛрдЧреНрдп рдбреЙрдХреНрдЯрд░реЛрдВ рд╕реЗ рдЖрдордиреЗ-рд╕рд╛рдордиреЗ рдмрд╛рдд рдХрд░реЗрдВ",
        benefit: "рдзреАрдореЗ рдЗрдВрдЯрд░рдиреЗрдЯ рдореЗрдВ рднреА рдЪрд▓рддрд╛ рд╣реИ",
        icon: "ЁЯй║"
      },
      {
        title: "рдбрд┐рдЬрд┐рдЯрд▓ рдкрд░реНрдЪреЗ",
        description: "рдЕрд╕рд▓реА рдкрд░реНрдЪреЗ рдкрд╛рдПрдВ рдЬреЛ рд╣рд░ рдореЗрдбрд┐рдХрд▓ рд╕реНрдЯреЛрд░ рдорд╛рдирддрд╛ рд╣реИ",
        benefit: "рд╕рднреА рджрд╡рд╛ рдХреА рджреБрдХрд╛рдиреЛрдВ рдореЗрдВ рдорд╛рдиреНрдп",
        icon: "ЁЯТК"
      },
      {
        title: "рд╕реНрд╡рд╛рд╕реНрдереНрдп рд░рд┐рдХреЙрд░реНрдб",
        description: "рдЖрдкрдХрд╛ рд╕рд╛рд░рд╛ рдореЗрдбрд┐рдХрд▓ рдЗрддрд┐рд╣рд╛рд╕ рдлреЛрди рдореЗрдВ рд╕реБрд░рдХреНрд╖рд┐рдд",
        benefit: "рдмрд┐рдирд╛ рдиреЗрдЯ рдХреЗ рднреА рдЙрдкрд▓рдмреНрдз",
        icon: "ЁЯУ▒"
      },
      {
        title: "рдЕрдкрдиреА рднрд╛рд╖рд╛ рдореЗрдВ",
        description: "рдкрдВрдЬрд╛рдмреА, рд╣рд┐рдВрджреА рдФрд░ рдЕрдиреНрдп рднрд╛рд░рддреАрдп рднрд╛рд╖рд╛рдУрдВ рдореЗрдВ рдЗрд╕реНрддреЗрдорд╛рд▓ рдХрд░реЗрдВ",
        benefit: "рдлреЛрди рд╕рд╣рд╛рдпрддрд╛ рднреА рдЙрдкрд▓рдмреНрдз",
        icon: "ЁЯМН"
      },
      {
        title: "рдЖрдкрд╛рддрдХрд╛рд▓реАрди рджреЗрдЦрднрд╛рд▓",
        description: "24/7 рдЗрдорд░рдЬреЗрдВрд╕реА рд╕рд▓рд╛рд╣ рдФрд░ рдПрдореНрдмреБрд▓реЗрдВрд╕ рдмреБрдХрд┐рдВрдЧ",
        benefit: "рдЖрдкрд╛рддрдХрд╛рд▓ рдореЗрдВ рддреБрд░рдВрдд рдЬреБрдбрд╝реЗрдВ",
        icon: "ЁЯЪи"
      },
      {
        title: "рдкрд╛рд░рд┐рд╡рд╛рд░рд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп",
        description: "рдкреВрд░реЗ рдкрд░рд┐рд╡рд╛рд░ рдХреА рд╕реЗрд╣рдд рдПрдХ рдРрдк рдореЗрдВ рд╕рдВрднрд╛рд▓реЗрдВ",
        benefit: "рдмреБрдЬреБрд░реНрдЧреЛрдВ рдФрд░ рдмрдЪреНрдЪреЛрдВ рдХреА рджреЗрдЦрднрд╛рд▓ рд╢рд╛рдорд┐рд▓",
        icon: "ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж"
      }
    ],

    howItWorksTitle: "GarudX рдХреИрд╕реЗ рдХрд╛рдо рдХрд░рддрд╛ рд╣реИ - 3 рдЖрд╕рд╛рди рдХрджрдо",
    steps: [
      {
        step: "1",
        title: "рд╕рд▓рд╛рд╣ рдмреБрдХ рдХрд░реЗрдВ",
        description: "рдЕрдкрдирд╛ рдкрд╕рдВрджреАрджрд╛ рд╕рдордп рдФрд░ рдбреЙрдХреНрдЯрд░ рдХреА рд╡рд┐рд╢реЗрд╖рддрд╛ рдЪреБрдиреЗрдВ"
      },
      {
        step: "2", 
        title: "рдбреЙрдХреНрдЯрд░ рд╕реЗ рд╡реАрдбрд┐рдпреЛ рдХреЙрд▓",
        description: "рдЕрдкрдиреА рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рдорд╕реНрдпрд╛рдУрдВ рдкрд░ рдЖрдордиреЗ-рд╕рд╛рдордиреЗ рдЪрд░реНрдЪрд╛ рдХрд░реЗрдВ"
      },
      {
        step: "3",
        title: "рдЗрд▓рд╛рдЬ рдкрд╛рдПрдВ",
        description: "рдкрд░реНрдЪрд╛ рдФрд░ рдлреЙрд▓реЛ-рдЕрдк рдХреЗрдпрд░ рдкреНрд▓рд╛рди рдкрд╛рдПрдВ"
      }
    ],

    savingsTitle: "GarudX рд╕реЗ рдорд╛рд╕рд┐рдХ рдмрдЪрдд",
    savingsItems: [
      { item: "рдпрд╛рддреНрд░рд╛ рдЦрд░реНрдЪ рдХреА рдмрдЪрдд", amount: "тВ╣1,200" },
      { item: "рджреИрдирд┐рдХ рдордЬрджреВрд░реА рдХрд╛ рдиреБрдХрд╕рд╛рди рдмрдЪрд╛", amount: "тВ╣3,500" },
      { item: "рд╕рдордп рдХреА рдмрдЪрдд (рдореВрд▓реНрдп)", amount: "тВ╣2,000" },
      { item: "рдкрд╛рд░рд┐рд╡рд╛рд░рд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛", amount: "тВ╣1,800" }
    ],
    totalSavings: "тВ╣8,500",
    vsTraditional: "рдмрдирд╛рдо тВ╣12,000 рдкрд╛рд░рдВрдкрд░рд┐рдХ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛ рд▓рд╛рдЧрдд",

    ctaTitle: "рдЖрдЬ рд╣реА рд╢реБрд░реВ рдХрд░реЗрдВ рдЕрдкрдирд╛ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕рдлрд░",
    ctaSubtitle: "рд╣рдЬрд╛рд░реЛрдВ рдкрд░рд┐рд╡рд╛рд░реЛрдВ рд╕реЗ рдЬреБрдбрд╝реЗрдВ рдЬрд┐рдиреНрд╣реЛрдВрдиреЗ рдмреЗрд╣рддрд░ рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛ рдХреЗ рд▓рд┐рдП GarudX рдЪреБрдирд╛",
    startNowFree: "рдЕрднреА рд╢реБрд░реВ рдХрд░реЗрдВ - рдмрд┐рд▓реНрдХреБрд▓ рдореБрдлреНрдд",
    noHiddenFees: "тЬУ рдХреЛрдИ рдЫреБрдкреА рдлреАрд╕ рдирд╣реАрдВ тЬУ рдХреЛрдИ рдорд╛рд╕рд┐рдХ рдЪрд╛рд░реНрдЬ рдирд╣реАрдВ тЬУ 24/7 рд╕рд╣рд╛рдпрддрд╛",
    trustIndicators: "рдкрдВрдЬрд╛рдм рднрд░ рдХреЗ 50,000+ рдкрд░рд┐рд╡рд╛рд░реЛрдВ рдХрд╛ рднрд░реЛрд╕рд╛",

    footerTagline: "рд╕реНрд╡рд╛рд╕реНрдереНрдп рд╕реЗрд╡рд╛ рдЬреЛ рдЖрдк рддрдХ рдЖрддреА рд╣реИ",
    allRightsReserved: "рд╕рднреА рдЕрдзрд┐рдХрд╛рд░ рд╕реБрд░рдХреНрд╖рд┐рдд рд╣реИрдВред",
    madeForVillages: "рдЧрд╛рдВрд╡реЛрдВ рдХреЗ рд▓рд┐рдП рдмрдирд╛рдпрд╛ рдЧрдпрд╛, рдЙрди рд▓реЛрдЧреЛрдВ рджреНрд╡рд╛рд░рд╛ рдЬреЛ рдкрд░рд╡рд╛рд╣ рдХрд░рддреЗ рд╣реИрдВред"
  },
  pa: {
    tagline: "рикри┐рй░риб ри╡ри┐рй▒риЪ рибри╛риХриЯри░",
    launchApp: "риРрик риЦрйЛри▓рйНри╣рйЛ",
    heroTitle: "рикри┐рй░риб риЫрй▒рибрйЗ римри┐риири╛риВ рибри╛риХриЯри░ риири╛ри▓ риори┐ри▓рйЛ",
    heroSubtitle: "ри╣рйБриг рижри┐рии ринри░ рижрйА риориЬрижрйВри░рйА риири╣рйАриВ риЧрйБриЖриЙригрйА рикри╡рйЗриЧрйА",
    heroDescription: "GarudX риири╛ри▓ риШри░ римрйИриарйЗ рикри╛риУ ри╡ризрйАриЖ риЗри▓ри╛риЬ",
    startFree: "риорйБрилрид ри╕ри▓ри╛ри╣ ри╕ри╝рйБри░рйВ риХри░рйЛ",
    learnMore: "ри╣рйЛри░ риЬри╛ригрйЛ",
    watchDemo: "рибрйИриорйЛ рижрйЗриЦрйЛ",
    available247: "24/7 риЙрикри▓римриз",
    completelySafe: "рикрйВри░рйА ридри░рйНри╣ри╛риВ ри╕рйБри░рй▒риЦри┐рид",
    useFree: "риорйБрилрид ри╡ри░ридрйЛ",
    
    problemTitle: "рикрйЗриВрибрйВ ри╕ри┐ри╣рид ри╕рйЗри╡ри╛ рижрйА ри░рйЛриЬри╝ри╛риири╛ ри╕риорй▒ри╕ри┐риЖ",
    problemStats: [
      { number: "тВ╣500-2000", label: "ри╣ри░ ри╣ри╕рикридри╛ри▓ риЬри╛риг ри╡ри┐рй▒риЪ риЧрйБриЖриЪрйА риориЬрижрйВри░рйА" },
      { number: "50+ риХри┐риорйА", label: "риЪрй░риЧрйЗ риЗри▓ри╛риЬ ридрй▒риХ рижрйА риФри╕рид рижрйВри░рйА" },
      { number: "6-8 риШрй░риЯрйЗ", label: "ри╕рилри░ риЕридрйЗ риЙрибрйАриХ ри╡ри┐рй▒риЪ римри░римри╛риж ри╕риори╛риВ" }
    ],
    problemDescription: "ри╣ри░ ри╣ри╕рикридри╛ри▓ риЬри╛ригри╛ риоридри▓рим риЗрй▒риХ рижри┐рии рижрйА риХриори╛риИ рижри╛ риЪри▓рйЗ риЬри╛ригри╛ред рикри░ри┐ри╡ри╛ри░ риирйВрй░ ри╕ри┐ри╣рид риЕридрйЗ ри░рйЛриЬри╝рйА-ри░рйЛриЯрйА ри╡ри┐риЪриХри╛ри░ риЪрйБригриири╛ рикрйИриВрижри╛ ри╣рйИред",

    solutionTitle: "GarudX риири╛ри▓ ри╕рин риХрйБриЭ риЖри╕ри╛рии",
    solutionSubtitle: "риШри░ римрйИриарйЗ рикрйВри░рйА ри╕ри┐ри╣рид ри╕рйЗри╡ри╛ред ри╕риори╛риВ римриЪри╛риУ, рикрйИри╕рйЗ римриЪри╛риУ, ри╕ри┐ри╣ридриорй░риж ри░ри╣рйЛред",
    
    features: [
      {
        title: "ри╡рйАрибрйАриУ ри░ри╛ри╣рйАриВ рибри╛риХриЯри░ риири╛ри▓ риЧрй▒ри▓",
        description: "риШри░ римрйИриарйЗ рипрйЛриЧ рибри╛риХриЯри░ри╛риВ риири╛ри▓ риЖри╣риорйЛ-ри╕ри╛ри╣риоригрйЗ риЧрй▒ри▓ риХри░рйЛ",
        benefit: "ри╣рйМри▓рйА риЗрй░риЯри░риирйИрй▒риЯ ри╡ри┐рй▒риЪ ри╡рйА риЪрй▒ри▓рижри╛ ри╣рйИ",
        icon: "ЁЯй║"
      },
      {
        title: "рибри┐риЬри┐риЯри▓ рикри░риЪрйЗ",
        description: "риЕри╕ри▓рйА рикри░риЪрйЗ рикри╛риУ риЬрйЛ ри╣ри░ риорйИрибрйАриХри▓ ри╕риЯрйЛри░ риорй░риирижри╛ ри╣рйИ",
        benefit: "ри╕ри╛ри░рйЗ рижри╡ри╛риИ рижрйАриЖриВ рижрйБриХри╛риири╛риВ ри╡ри┐рй▒риЪ риори╛риирип",
        icon: "ЁЯТК"
      },
      {
        title: "ри╕ри┐ри╣рид ри░ри┐риХри╛ри░риб",
        description: "ридрйБри╣ри╛рибри╛ ри╕ри╛ри░ри╛ риорйИрибрйАриХри▓ риЗридри┐ри╣ри╛ри╕ рилрйЛрии ри╡ри┐рй▒риЪ ри╕рйБри░рй▒риЦри┐рид",
        benefit: "римри┐риири╛ риирйИрй▒риЯ ри╡рйА риЙрикри▓римриз",
        icon: "ЁЯУ▒"
      },
      {
        title: "риЖрикригрйА ринри╛ри╕ри╝ри╛ ри╡ри┐рй▒риЪ",
        description: "рикрй░риЬри╛римрйА, ри╣ри┐рй░рижрйА риЕридрйЗ ри╣рйЛри░ ринри╛ри░ридрйА ринри╛ри╕ри╝ри╛ри╡ри╛риВ ри╡ри┐рй▒риЪ ри╡ри░ридрйЛ",
        benefit: "рилрйЛрии ри╕ри╣ри╛риЗридри╛ ри╡рйА риЙрикри▓римриз",
        icon: "ЁЯМН"
      },
      {
        title: "риРриори░риЬрйИриВри╕рйА рижрйЗриЦринри╛ри▓",
        description: "24/7 риРриори░риЬрйИриВри╕рйА ри╕ри▓ри╛ри╣ риЕридрйЗ риРриВримрйБри▓рйИриВри╕ римрйБрй▒риХри┐рй░риЧ",
        benefit: "риРриори░риЬрйИриВри╕рйА ри╡ри┐рй▒риЪ ридрйБри░рй░рид риЬрйБрйЬрйЛ",
        icon: "ЁЯЪи"
      },
      {
        title: "рикри░ри┐ри╡ри╛ри░ри┐риХ ри╕ри┐ри╣рид",
        description: "рикрйВри░рйЗ рикри░ри┐ри╡ри╛ри░ рижрйА ри╕ри┐ри╣рид риЗрй▒риХ риРрик ри╡ри┐рй▒риЪ ри╕рй░ринри╛ри▓рйЛ",
        benefit: "римриЬрйБри░риЧри╛риВ риЕридрйЗ римрй▒риЪри┐риЖриВ рижрйА рижрйЗриЦринри╛ри▓ ри╕ри╝ри╛риори┐ри▓",
        icon: "ЁЯСитАНЁЯСйтАНЁЯСзтАНЁЯСж"
      }
    ],

    howItWorksTitle: "GarudX риХри┐ри╡рйЗриВ риХрй░рио риХри░рижри╛ ри╣рйИ - 3 риЖри╕ри╛рии риХрижрио",
    steps: [
      {
        step: "1",
        title: "ри╕ри▓ри╛ри╣ римрйБрй▒риХ риХри░рйЛ",
        description: "риЖрикригри╛ рикри╕рй░рижрйАрижри╛ ри╕риори╛риВ риЕридрйЗ рибри╛риХриЯри░ рижрйА ри╡ри┐ри╕ри╝рйЗри╕ри╝ридри╛ риЪрйБригрйЛ"
      },
      {
        step: "2", 
        title: "рибри╛риХриЯри░ риири╛ри▓ ри╡рйАрибрйАриУ риХри╛ри▓",
        description: "риЖрикригрйАриЖриВ ри╕ри┐ри╣рид ри╕риорй▒ри╕ри┐риЖри╡ри╛риВ римри╛ри░рйЗ риЖри╣риорйЛ-ри╕ри╛ри╣риоригрйЗ риЧрй▒ри▓римри╛рид риХри░рйЛ"
      },
      {
        step: "3",
        title: "риЗри▓ри╛риЬ рикри╛риУ",
        description: "рикри░риЪри╛ риЕридрйЗ рилри╛ри▓рйЛ-риЕрй▒рик риХрйЗриЕри░ рикри▓ри╛рии рикри╛риУ"
      }
    ],

    savingsTitle: "GarudX риири╛ри▓ риори╛ри╕ри┐риХ римриЪрид",
    savingsItems: [
      { item: "рипри╛ридри░ри╛ риЦри░риЪ рижрйА римриЪрид", amount: "тВ╣1,200" },
      { item: "ри░рйЛриЬри╝ри╛риири╛ риориЬрижрйВри░рйА рижри╛ риирйБриХри╕ри╛рии римриЪри╛риЗриЖ", amount: "тВ╣3,500" },
      { item: "ри╕риорйЗриВ рижрйА римриЪрид (риорйБрй▒ри▓)", amount: "тВ╣2,000" },
      { item: "рикри░ри┐ри╡ри╛ри░ри┐риХ ри╕ри┐ри╣рид ри╕рйЗри╡ри╛", amount: "тВ╣1,800" }
    ],
    totalSavings: "тВ╣8,500",
    vsTraditional: "римриири╛рио ри░ри╡ри╛риЗридрйА ри╕ри┐ри╣рид ри╕рйЗри╡ри╛ ри▓ри╛риЧрид тВ╣12,000",

    ctaTitle: "риЕрй▒риЬ ри╣рйА ри╕ри╝рйБри░рйВ риХри░рйЛ риЖрикригри╛ ри╕ри┐ри╣рид ри╕рилри░",
    ctaSubtitle: "ри╣риЬри╝ри╛ри░ри╛риВ рикри░ри┐ри╡ри╛ри░ри╛риВ риири╛ри▓ риЬрйБрйЬрйЛ риЬри┐риирйНри╣ри╛риВ риирйЗ римри┐ри╣ридри░ ри╕ри┐ри╣рид ри╕рйЗри╡ри╛ ри▓риИ GarudX риЪрйБригри┐риЖ",
    startNowFree: "ри╣рйБригрйЗ ри╕ри╝рйБри░рйВ риХри░рйЛ - римри┐ри▓риХрйБри▓ риорйБрилрид",
    noHiddenFees: "тЬУ риХрйЛриИ риЫрйБрикрйА рилрйАри╕ риири╣рйАриВ тЬУ риХрйЛриИ риори╛ри╕ри┐риХ риЪри╛ри░риЬ риири╣рйАриВ тЬУ 24/7 ри╕ри╣ри╛риЗридри╛",
    trustIndicators: "рикрй░риЬри╛рим ринри░ рижрйЗ 50,000+ рикри░ри┐ри╡ри╛ри░ри╛риВ рижри╛ ринри░рйЛри╕ри╛",

    footerTagline: "ри╕ри┐ри╣рид ри╕рйЗри╡ри╛ риЬрйЛ ридрйБри╣ри╛рибрйЗ ридрй▒риХ риЖриЙриВрижрйА ри╣рйИ",
    allRightsReserved: "ри╕ри╛ри░рйЗ ри╣рй▒риХ ри░ри╛риЦри╡рйЗриВ ри╣рииред",
    madeForVillages: "рикри┐рй░рибри╛риВ ри▓риИ римригри╛риЗриЖ риЧри┐риЖ, риЙри╣риири╛риВ ри▓рйЛриХри╛риВ рижрйБриЖри░ри╛ риЬрйЛ рикри░ри╡ри╛ри╣ риХри░рижрйЗ ри╣рииред"
  }
};

type Language = 'en' | 'hi' | 'pa';

// Typing animation hook
const useTypingAnimation = (texts: string[], speed = 100, pause = 2000) => {
  const [displayText, setDisplayText] = useState('');
  const [currentIndex, setCurrentIndex] = useState(0);
  const [isDeleting, setIsDeleting] = useState(false);

  useEffect(() => {
    const currentText = texts[currentIndex];
    
    const timer = setTimeout(() => {
      if (!isDeleting) {
        if (displayText.length < currentText.length) {
          setDisplayText(currentText.substring(0, displayText.length + 1));
        } else {
          setTimeout(() => setIsDeleting(true), pause);
        }
      } else {
        if (displayText.length > 0) {
          setDisplayText(currentText.substring(0, displayText.length - 1));
        } else {
          setIsDeleting(false);
          setCurrentIndex((prev) => (prev + 1) % texts.length);
        }
      }
    }, isDeleting ? speed / 2 : speed);

    return () => clearTimeout(timer);
  }, [displayText, currentIndex, isDeleting, texts, speed, pause]);

  return displayText;
};

// Floating animation component
const FloatingElement: React.FC<{ children: React.ReactNode; delay?: number; duration?: number }> = ({ 
  children, 
  delay = 0, 
  duration = 3 
}) => (
  <div 
    className="animate-float" 
    style={{ 
      animationDelay: `${delay}s`,
      animationDuration: `${duration}s`
    }}
  >
    {children}
  </div>
);


const LandingPageAdvanced: React.FC = () => {
  const [currentLanguage, setCurrentLanguage] = useState<Language>('hi');
  const [isLangOpen, setIsLangOpen] = useState(false);
  const [isVisible, setIsVisible] = useState(false);
  const [activeFeature, setActiveFeature] = useState(0);

  const t = translations[currentLanguage];

  const heroTexts = [
    t.heroTitle,
    t.heroSubtitle,
    t.heroDescription
  ];

  const typingText = useTypingAnimation(heroTexts, 80, 3000);

  const languages = [
    { code: 'hi' as Language, name: 'рд╣рд┐рдВрджреА', flag: 'ЁЯЗоЁЯЗ│' },
    { code: 'pa' as Language, name: 'рикрй░риЬри╛римрйА', flag: 'ЁЯЗоЁЯЗ│' },
    { code: 'en' as Language, name: 'English', flag: 'ЁЯЗмЁЯЗз' }
  ];

  const currentLang = languages.find(lang => lang.code === currentLanguage) || languages[0];

  // Auto-rotate features
  useEffect(() => {
    const interval = setInterval(() => {
      setActiveFeature(prev => (prev + 1) % t.features.length);
    }, 4000);
    return () => clearInterval(interval);
  }, [t.features.length]);

  useEffect(() => {
    setIsVisible(true);
  }, []);

  return (
    <div className="min-h-screen bg-white overflow-x-hidden">
      {/* Advanced CSS Animations */}
      <style>{`
        @keyframes fadeInUp {
          from {
            opacity: 0;
            transform: translateY(50px);
          }
          to {
            opacity: 1;
            transform: translateY(0);
          }
        }
        
        @keyframes float {
          0%, 100% { transform: translateY(0px) rotate(0deg); }
          25% { transform: translateY(-20px) rotate(1deg); }
          50% { transform: translateY(-10px) rotate(-1deg); }
          75% { transform: translateY(-15px) rotate(0.5deg); }
        }
        
        @keyframes bounce {
          0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
          40% { transform: translateY(-10px); }
          60% { transform: translateY(-5px); }
        }
        
        @keyframes pulse {
          0% { box-shadow: 0 0 0 0 rgba(16, 185, 129, 0.7); }
          70% { box-shadow: 0 0 0 10px rgba(16, 185, 129, 0); }
          100% { box-shadow: 0 0 0 0 rgba(16, 185, 129, 0); }
        }
        
        @keyframes gradient {
          0% { background-position: 0% 50%; }
          50% { background-position: 100% 50%; }
          100% { background-position: 0% 50%; }
        }
        
        @keyframes slideInLeft {
          from {
            opacity: 0;
            transform: translateX(-100px);
          }
          to {
            opacity: 1;
            transform: translateX(0);
          }
        }
        
        @keyframes slideInRight {
          from {
            opacity: 0;
            transform: translateX(100px);
          }
          to {
            opacity: 1;
            transform: translateX(0);
          }
        }
        
        @keyframes scaleIn {
          from {
            opacity: 0;
            transform: scale(0.8);
          }
          to {
            opacity: 1;
            transform: scale(1);
          }
        }
        
        @keyframes typing {
          from { width: 0 }
          to { width: 100% }
        }
        
        @keyframes blink {
          0%, 50% { opacity: 1 }
          51%, 100% { opacity: 0 }
        }
        
        .animate-fadeInUp {
          animation: fadeInUp 0.8s ease-out;
        }
        
        .animate-float {
          animation: float 3s ease-in-out infinite;
        }
        
        .animate-bounce-gentle {
          animation: bounce 2s infinite;
        }
        
        .animate-pulse-ring {
          animation: pulse 2s infinite;
        }
        
        .animate-gradient {
          background: linear-gradient(-45deg, #10b981, #3b82f6, #8b5cf6, #f59e0b);
          background-size: 400% 400%;
          animation: gradient 15s ease infinite;
        }
        
        .animate-slideInLeft {
          animation: slideInLeft 0.8s ease-out;
        }
        
        .animate-slideInRight {
          animation: slideInRight 0.8s ease-out;
        }
        
        .animate-scaleIn {
          animation: scaleIn 0.6s ease-out;
        }
        
        .typing-cursor::after {
          content: '|';
          animation: blink 1s infinite;
          color: #10b981;
          font-weight: bold;
        }
        
        .glass {
          backdrop-filter: blur(20px);
          background: rgba(255, 255, 255, 0.1);
          border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .card-hover {
          transition: all 0.3s ease;
        }
        
        .card-hover:hover {
          transform: translateY(-10px) scale(1.02);
          box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
        }
        
        .gradient-text {
          background: linear-gradient(45deg, #10b981, #3b82f6, #8b5cf6);
          -webkit-background-clip: text;
          background-clip: text;
          -webkit-text-fill-color: transparent;
          background-size: 200% 200%;
          animation: gradient 3s ease infinite;
        }
        
        .parallax {
          transform: translateZ(0);
          will-change: transform;
        }
      `}</style>

      {/* Sticky Header with Glassmorphism */}
      <header className="glass fixed top-0 w-full z-50 py-4">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex justify-between items-center">
            <div className="flex items-center group cursor-pointer">
              <FloatingElement delay={0} duration={2}>
                <GarudXLogo 
                  size="lg" 
                  variant="gradient" 
                  animated={true} 
                  showText={false}
                />
              </FloatingElement>
              <div className="ml-4">
                <h1 className="text-3xl font-bold gradient-text">
                  GarudX
                </h1>
                <p className="text-sm text-gray-600">{t.tagline}</p>
              </div>
            </div>
            
            <div className="flex items-center space-x-6">
              {/* Language Selector */}
              <div className="relative">
                <button
                  onClick={() => setIsLangOpen(!isLangOpen)}
                  className="flex items-center space-x-2 px-4 py-2 rounded-xl glass hover:bg-white/20 transition-all duration-300"
                >
                  <span className="text-lg">{currentLang.flag}</span>
                  <span className="font-medium">{currentLang.name}</span>
                  <span className={`transition-transform duration-300 ${isLangOpen ? 'rotate-180' : ''}`}>тМД</span>
                </button>
                
                {isLangOpen && (
                  <div className="absolute top-full right-0 mt-2 glass rounded-xl shadow-2xl min-w-[180px] animate-fadeInUp">
                    {languages.map((lang, index) => (
                      <button
                        key={lang.code}
                        onClick={() => {
                          setCurrentLanguage(lang.code);
                          setIsLangOpen(false);
                        }}
                        className={`w-full flex items-center space-x-3 px-4 py-3 text-sm hover:bg-white/20 transition-all duration-300 first:rounded-t-xl last:rounded-b-xl ${
                          currentLanguage === lang.code ? 'bg-green-50/50 text-green-700' : ''
                        }`}
                        style={{ animationDelay: `${index * 0.1}s` }}
                      >
                        <span className="text-lg">{lang.flag}</span>
                        <span className="font-medium">{lang.name}</span>
                      </button>
                    ))}
                  </div>
                )}
              </div>
              
              <Link 
                to="/login"
                className="bg-gradient-to-r from-green-600 to-green-700 text-white px-6 py-3 rounded-xl hover:from-green-700 hover:to-green-800 transition-all duration-300 font-semibold shadow-lg hover:shadow-xl transform hover:scale-105"
              >
                {t.launchApp} тЖТ
              </Link>
            </div>
          </div>
        </div>
      </header>

      {/* Hero Section with Advanced Animations */}
      <section className="min-h-screen bg-gradient-to-br from-green-50 via-blue-50 to-purple-50 relative overflow-hidden pt-24">
        {/* Animated Background Elements */}
        <div className="absolute inset-0 overflow-hidden pointer-events-none">
          <FloatingElement delay={0} duration={4}>
            <div className="absolute top-20 left-10 w-32 h-32 bg-green-300 rounded-full opacity-20 blur-xl"></div>
          </FloatingElement>
          <FloatingElement delay={1} duration={5}>
            <div className="absolute top-40 right-20 w-24 h-24 bg-blue-300 rounded-full opacity-20 blur-xl"></div>
          </FloatingElement>
          <FloatingElement delay={2} duration={3}>
            <div className="absolute bottom-20 left-20 w-20 h-20 bg-purple-300 rounded-full opacity-20 blur-xl"></div>
          </FloatingElement>
        </div>

        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
          <div className="grid grid-cols-1 lg:grid-cols-2 gap-12 items-center min-h-screen py-20">
            {/* Left Content */}
            <div className={`space-y-8 ${isVisible ? 'animate-slideInLeft' : 'opacity-0'}`}>
              <div className="space-y-6">
                <div className="inline-flex items-center bg-green-100 rounded-full px-6 py-3 animate-bounce-gentle">
                  <span className="text-2xl mr-3">ЁЯУН</span>
                  <span className="text-green-800 font-semibold">
                    {currentLanguage === 'en' ? 'For Nabha and surrounding 173 villages' :
                     currentLanguage === 'pa' ? 'риири╛ринри╛ риЕридрйЗ риЖри╕ рикри╛ри╕ рижрйЗ 173 рикри┐рй░рибри╛риВ ри▓риИ' :
                     'Nabha рдФрд░ рдЖрд╕рдкрд╛рд╕ рдХреЗ 173 рдЧрд╛рдВрд╡реЛрдВ рдХреЗ рд▓рд┐рдП'}
                  </span>
                </div>
                
                <div className="space-y-4">
                  <h1 className="text-5xl md:text-7xl font-bold text-gray-900 leading-tight">
                    <span className="typing-cursor gradient-text">
                      {typingText}
                    </span>
                  </h1>
                </div>
              </div>
              
              <div className="flex flex-col sm:flex-row gap-4">
                <Link
                  to="/login"
                  className="group bg-gradient-to-r from-green-600 to-green-700 text-white px-8 py-4 rounded-2xl hover:from-green-700 hover:to-green-800 transition-all duration-300 font-bold text-lg flex items-center justify-center shadow-xl hover:shadow-2xl transform hover:scale-105"
                >
                  <span className="mr-3 text-xl">ЁЯЪА</span>
                  {t.startFree}
                  <span className="ml-3 group-hover:translate-x-1 transition-transform">тЖТ</span>
                </Link>
                
                <button className="border-2 border-green-600 text-green-600 px-8 py-4 rounded-2xl hover:bg-green-50 transition-all duration-300 font-semibold text-lg flex items-center justify-center transform hover:scale-105">
                  <span className="mr-3 text-xl">ЁЯОе</span>
                  {t.watchDemo}
                </button>
              </div>

              {/* Trust Indicators */}
              <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                {[t.available247, t.completelySafe, t.useFree].map((text, index) => (
                  <div 
                    key={index}
                    className="glass rounded-xl py-4 px-6 text-center card-hover"
                    style={{ animationDelay: `${index * 0.2}s` }}
                  >
                    <div className="text-2xl mb-2">
                      {index === 0 ? 'тЬЕ' : index === 1 ? 'ЁЯЫбя╕П' : 'тнР'}
                    </div>
                    <span className="font-semibold text-gray-800">{text}</span>
                  </div>
                ))}
              </div>
            </div>

            {/* Right Visual Elements */}
            <div className={`relative ${isVisible ? 'animate-slideInRight' : 'opacity-0'}`}>
              <div className="relative">
                <FloatingElement delay={0} duration={4}>
                  <div className="glass rounded-3xl p-8 shadow-2xl">
                    <div className="text-center space-y-6">
                      <div className="w-24 h-24 mx-auto rounded-full flex items-center justify-center animate-pulse-ring">
                        <GarudXLogo 
                          size="xl" 
                          variant="primary" 
                          animated={true} 
                          showText={false}
                        />
                      </div>
                      <div>
                        <h3 className="text-2xl font-bold text-gray-900 mb-2">
                          {currentLanguage === 'en' ? 'Dr. Available Now' :
                           currentLanguage === 'pa' ? 'рибри╛риХриЯри░ ри╣рйБриг риЙрикри▓римриз' :
                           'рдбреЙрдХреНрдЯрд░ рдЕрднреА рдЙрдкрд▓рдмреНрдз'}
                        </h3>
                        <p className="text-gray-600">
                          {currentLanguage === 'en' ? 'Connect instantly for consultation' :
                           currentLanguage === 'pa' ? 'ри╕ри▓ри╛ри╣ ри▓риИ ридрйБри░рй░рид риЬрйБрйЬрйЛ' :
                           'рд╕рд▓рд╛рд╣ рдХреЗ рд▓рд┐рдП рддреБрд░рдВрдд рдЬреБрдбрд╝реЗрдВ'}
                        </p>
                      </div>
                      <div className="flex justify-center space-x-4">
                        <div className="w-8 h-8 bg-green-500 rounded-full animate-pulse"></div>
                        <div className="w-8 h-8 bg-blue-500 rounded-full animate-pulse" style={{ animationDelay: '0.5s' }}></div>
                        <div className="w-8 h-8 bg-purple-500 rounded-full animate-pulse" style={{ animationDelay: '1s' }}></div>
                      </div>
                    </div>
                  </div>
                </FloatingElement>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Problem Section */}
      <section className="py-20 bg-red-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold text-red-800 mb-6 animate-fadeInUp">
              {t.problemTitle}
            </h2>
            <p className="text-xl text-red-700 max-w-3xl mx-auto animate-fadeInUp">
              {t.problemDescription}
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {t.problemStats.map((stat, index) => (
              <div 
                key={index}
                className="text-center p-8 bg-white rounded-2xl shadow-lg card-hover"
                style={{ animationDelay: `${index * 0.2}s` }}
              >
                <div className="text-4xl md:text-6xl font-bold text-red-600 mb-4 gradient-text">
                  {stat.number}
                </div>
                <p className="text-gray-700 font-medium">{stat.label}</p>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Solution Features Section */}
      <section className="py-20 bg-white">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6 gradient-text">
              {t.solutionTitle}
            </h2>
            <p className="text-xl text-gray-600 max-w-3xl mx-auto">
              {t.solutionSubtitle}
            </p>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {t.features.map((feature, index) => (
              <div 
                key={index}
                className={`p-8 bg-white rounded-2xl shadow-lg border-2 transition-all duration-500 card-hover ${
                  activeFeature === index 
                    ? 'border-green-500 shadow-2xl bg-green-50' 
                    : 'border-gray-100 hover:border-green-300'
                }`}
                onMouseEnter={() => setActiveFeature(index)}
              >
                <div className="text-center">
                  <div className="text-6xl mb-6 animate-bounce-gentle">
                    {feature.icon}
                  </div>
                  <h3 className="text-2xl font-bold text-gray-900 mb-4">
                    {feature.title}
                  </h3>
                  <p className="text-gray-600 mb-6">
                    {feature.description}
                  </p>
                  <div className="inline-flex items-center text-green-600 font-semibold bg-green-100 px-4 py-2 rounded-full">
                    тЬЕ {feature.benefit}
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* How It Works Section */}
      <section className="py-20 bg-gradient-to-br from-blue-50 to-purple-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold text-gray-900 mb-6">
              {t.howItWorksTitle}
            </h2>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-3 gap-8">
            {t.steps.map((step, index) => (
              <div key={index} className="relative">
                <div className="text-center p-8 bg-white rounded-2xl shadow-lg card-hover">
                  <div className="w-16 h-16 mx-auto mb-6 bg-gradient-to-br from-green-500 to-blue-600 rounded-full flex items-center justify-center text-white text-2xl font-bold animate-pulse-ring">
                    {step.step}
                  </div>
                  <h3 className="text-2xl font-bold text-gray-900 mb-4">
                    {step.title}
                  </h3>
                  <p className="text-gray-600">
                    {step.description}
                  </p>
                </div>
                
                {index < t.steps.length - 1 && (
                  <div className="hidden md:block absolute top-1/2 -right-4 transform -translate-y-1/2">
                    <div className="text-4xl text-green-500 animate-bounce-gentle">тЖТ</div>
                  </div>
                )}
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Savings Calculator Section */}
      <section className="py-20 bg-green-50">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center mb-16">
            <h2 className="text-4xl md:text-5xl font-bold text-green-800 mb-6">
              {t.savingsTitle}
            </h2>
          </div>

          <div className="bg-white rounded-3xl shadow-2xl p-8 md:p-12">
            <div className="grid grid-cols-1 md:grid-cols-2 gap-12 items-center">
              <div className="space-y-6">
                {t.savingsItems.map((item, index) => (
                  <div key={index} className="flex justify-between items-center p-4 bg-green-50 rounded-xl">
                    <span className="text-gray-700 font-medium">{item.item}</span>
                    <span className="text-2xl font-bold text-green-600">{item.amount}</span>
                  </div>
                ))}
              </div>
              
              <div className="text-center">
                <div className="mb-6">
                  <div className="text-6xl md:text-8xl font-bold gradient-text mb-4">
                    {t.totalSavings}
                  </div>
                  <p className="text-xl text-gray-600">{t.vsTraditional}</p>
                </div>
                
                <Link
                  to="/login"
                  className="bg-gradient-to-r from-green-600 to-green-700 text-white px-8 py-4 rounded-2xl hover:from-green-700 hover:to-green-800 transition-all duration-300 font-bold text-lg inline-flex items-center shadow-xl hover:shadow-2xl transform hover:scale-105"
                >
                  ЁЯТ░ {t.startNowFree}
                </Link>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Final CTA Section */}
      <section className="py-20 animate-gradient relative overflow-hidden">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center relative z-10">
          <h2 className="text-4xl md:text-6xl font-bold text-white mb-8">
            {t.ctaTitle}
          </h2>
          <p className="text-2xl text-white/90 mb-8">
            {t.ctaSubtitle}
          </p>
          <p className="text-lg text-white/80 mb-12">
            {t.trustIndicators}
          </p>
          
          <Link
            to="/login"
            className="group bg-white text-green-600 px-12 py-6 rounded-2xl hover:bg-gray-50 transition-all duration-300 font-bold text-2xl inline-flex items-center shadow-2xl hover:shadow-3xl transform hover:scale-105 mb-8"
          >
            <span className="mr-4 text-3xl group-hover:animate-bounce">ЁЯЪА</span>
            {t.startNowFree}
            <span className="ml-4 group-hover:translate-x-2 transition-transform text-3xl">тЖТ</span>
          </Link>

          <p className="text-white/90 text-lg">
            {t.noHiddenFees}
          </p>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-gray-900 text-white py-16">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="text-center">
            <div className="flex items-center justify-center mb-8">
              <FloatingElement>
                <GarudXLogo 
                  size="xl" 
                  variant="white" 
                  animated={true} 
                  showText={false}
                />
              </FloatingElement>
              <div className="ml-4">
                <h3 className="text-3xl font-bold gradient-text">GarudX</h3>
                <p className="text-gray-400">{t.footerTagline}</p>
              </div>
            </div>
            
            <div className="border-t border-gray-800 pt-8">
              <p className="text-gray-400">
                ┬й 2025 GarudX. {t.allRightsReserved}
              </p>
              <p className="text-green-400 mt-2 font-medium">
                {t.madeForVillages}
              </p>
            </div>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default LandingPageAdvanced;
